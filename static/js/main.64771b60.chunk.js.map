{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","App.js","reportWebVitals.js","index.js"],"names":["About","React","Component","Movie","title","year","summary","poster","genres","class","src","alt","className","map","genre","index","slice","Home","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAEaA,EAAb,uKAGQ,OACG,kDAJX,GAA2BC,IAAMC,W,gDC4BlBC,MA1Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACI,sBAAKC,MAAM,QAAX,UACI,qBAAKC,IAAKH,EAAQI,IAAKP,EAAOA,MAAOA,IACrC,sBAAKQ,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BR,IAC9B,oBAAIQ,UAAU,cAAd,SAA6BP,IAC7B,oBAAIO,UAAU,gBAAd,SACMJ,EAAOK,KAAI,SAACC,EAAOC,GACjB,OAAO,oBAAgBH,UAAW,eAA3B,SAA4CE,GAAnCC,QAGxB,oBAAGH,UAAU,gBAAb,UAA8BN,EAAQU,MAAM,EAAG,KAA/C,gBCXHC,G,MAAb,4MACIC,MAAQ,CACJC,WAAW,EACXC,OAAQ,IAHhB,EAMIC,UANJ,sBAMgB,8BAAAC,EAAA,sEAMEC,IAAMC,IAAI,4DANZ,gBAIQJ,EAJR,EAGJK,KACIA,KAAQL,OAGhB,EAAKM,SAAS,CACVN,SACAD,WAAW,IATP,2CANhB,kEAoBQQ,KAAKN,cApBb,+BAuBa,MACyBM,KAAKT,MAA3BC,EADH,EACGA,UAAWC,EADd,EACcA,OACnB,OACI,yBAASR,UAAW,YAApB,SACMO,EACE,qBAAKP,UAAU,SAAf,SACI,sBAAMA,UAAU,eAAhB,0BAGJ,qBAAKA,UAAU,SAAf,SACKQ,EAAOP,KAAI,SAACe,EAAOb,GAAR,OACR,cAAC,EAAD,CAEIV,KAAMuB,EAAMvB,KACZD,MAAOwB,EAAMxB,MACbE,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMC,mBACdrB,OAAQoB,EAAMpB,QALTO,cAnCrC,GAA0Bd,IAAMC,Y,uBCajB4B,E,uKATX,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWhB,IACxC,cAAC,IAAD,CAAOc,KAAK,SAASE,UAAWjC,W,GANtBC,IAAMC,WCMTgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.64771b60.chunk.js","sourcesContent":["import React from \"react\";\n\nexport class About extends React.Component {\n\n    render() {\n        return (\n           <span> i'm king </span>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css';\n\nfunction Movie({ title, year, summary, poster, genres }) {\n    return(\n        <div class=\"movie\">\n            <img src={poster} alt={title} title={title} />\n            <div className=\"movie__data\">\n                <h3 className=\"movie__title\">{title}</h3>\n                <h5 className=\"movie__year\">{year}</h5>\n                <ul className=\"movie__genres\">\n                    { genres.map((genre, index) => {\n                        return <li key={index} className={\"movie__genre\"}>{genre}</li>\n                    })}\n                </ul>\n                <p className=\"movie_summary\">{summary.slice(0, 180)}...</p>\n            </div>\n        </div>\n    );\n}\n\nMovie.propTypes = { // 요구 타입선언\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from '../components/Movie';\nimport './Home.css';\n\nexport class Home extends React.Component {\n    state = {\n        isLoading: true,\n        movies: [],\n    }\n\n    getMovies = async () => {\n\n        const {\n            data: {\n                data: { movies },\n            },\n        } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\n        this.setState({\n            movies,\n            isLoading: false,\n        }); // this.setState({ movies: movies }); state와 지역변수명이 같으면 축약가능\n    }\n\n    componentDidMount() { // 렌더링 후 동작\n        this.getMovies();\n    }\n\n    render() { // 렌더링\n        const { isLoading, movies } = this.state;\n        return(\n            <section className={\"container\"}>\n                { isLoading ? (\n                    <div className=\"loader\">\n                        <span className=\"loader__text\">Loading...</span>\n                    </div>\n                ) : (\n                    <div className=\"movies\">\n                        {movies.map((movie, index) => (\n                            <Movie\n                                key={index}\n                                year={movie.year}\n                                title={movie.title}\n                                summary={movie.summary}\n                                poster={movie.medium_cover_image}\n                                genres={movie.genres}\n                            />\n                        ))}\n                    </div>\n                )}\n            </section>\n        );\n\n    }\n}\n","import React from 'react';\nimport { About } from \"./routes/About\";\nimport { Home } from \"./routes/Home\";\nimport './App.css';\nimport { HashRouter, Route } from \"react-router-dom\";\n\nclass App extends React.Component {\n\n  render() { // 렌더링\n    return (\n      <HashRouter>\n        <Route path=\"/\" exact={true} component={Home} />\n        <Route path=\"/about\" component={About} />\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}